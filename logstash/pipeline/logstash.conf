input {
	beats {
		port => 5044
      	 codec => json {
        }
	}
	udp {
		port => 50000
	}
	tcp {
		port => 50000
	}
	tcp {
		port => 5000
      	codec => json {
        }
        add_field => { "service.name" => "rdf-data-logger" }
	}
# 	gelf {
# 	     use_udp => true
#          port_udp => 50000
# 	}
}

## Add your filters / logstash plugins configuration here

filter {
    date {
        # json log entries from the PPC have timestamps like so: 2022-11-01 18:51:21,204
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss','SSS" ]
    }
    mutate {
         rename => {
              "[host]" => "[host][name]"
            }
#        remove_field => ["context_stack"]
#        remove_field => ["context_map"]

        # tag with customer and site ids
        add_field => { "customerId" => "VEOLIA" }
        add_field => { "siteId" => "LEVICE" }

        # rename log4cxx fields to ECS common
        rename => { "logger" => "log.logger" }
        rename => { "level" => "log.level" }

    }

    # extract the base filename minus extension, this is the service name by convention (ex: ppc, rdf-data-logger, lts-watcher)
    grok {
        match => { "[log][file][path]" =>  "%{GREEDYDATA}/%{GREEDYDATA:filename}\.json\.log" }
        add_field => { "service.name" => "%{filename}" }
    }

    # logger prefixes such as com.leclanche is just un-necessary noise, get rid of 'em
    mutate {
#       gsub => ["log.logger", "com.leclanche.", ""]
#       gsub => ["log.logger", "com.idisys.", ""]
    }

#       mutate {
#           add_field => { "service.name" => "%{filename}" }
#       }

#  mutate {
#     # Renames the 'keyA' field to 'KeyC'
#     rename => { "timestamp" => "@timestamp" }
#   }

#     prune {
#    blacklist_names => [ "source_host", "className", "facility" ]
#   }
#   mutate {
#     # Sets the default value for application, in case someone forgot to set it in their
#     # Gelf configuration
#     coerce => { "application" => "unknown_application" }
#   }

#       mutate {
#         gsub => [
#           # replace all single quote with double quote
#           "message", "'", "\",
#         ]
#       }
#       json {
#         source => "message"
#       }
    }

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "logstash_internal"
		password => "${LOGSTASH_INTERNAL_PASSWORD}"
	}
##	 stdout{}
#     file {
#        path => "/tmp/logstash_output.log"
##       codec => line { format => "custom format: %{message}"}
#     }
}
